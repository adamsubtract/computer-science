Exercises:

1. What is the main difference between a stack and a queue?

   A stack uses the LIFO (last in first out) to prioritize entries and a queue uses
   FIFO (first in first out) to prioritize entries.

2. What are the similarities between stacks and queues?

   No indexes are available and both cannot pick from the middle.

3. Imagine you are an engineer tasked with implementing the UNDO and REDO options
   in a word processor such as Microsoft Word. Which data structure would you use
   for each option and why?

   I would use the FIFO because this type of data structure would keep track of each
   step. If you needed to look back at the steps that were stored, FIFO would organize
   it in a chronological order unlike LIFO would.

Programming Questions:

1. Given a string, reverse it using a stack. For example, the string "Bloc!" should be
   converted to "!colB".

   var word = "Bloc!";

   function reverse(string){

       var array = [];
       var reversedArray = [];

       for(i = 0; i < string.length; i++){
        array.push(string.charAt(i));
       }

       while(array.length){
          reversedArray.push(array.pop());
       };

       return reversedArray;

   }

   console.log(reverse(word));

2. Implement the pop method of a stack using one queue. Make a FIFO data structure
   mirror the functionality of a LIFO data structure. Since the internal list is not
   the same as defined in the checkpoint, it may help to rewrite the pseudocode first.

   
